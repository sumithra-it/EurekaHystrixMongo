version: '2.1'
services:
  database:
    image: mongo
    container_name: "database"
    ports:
      - "27017:27017"
 #   command: --smallfiles
    healthcheck:
      test: echo 'db.runCommand("ping").ok' 
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      backend:
        aliases:
          - "database"
  configserver:
    image: ostock/configserver:0.0.1-SNAPSHOT
    ports:
       - "8071:8071"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "configserver"
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
    - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
    networks:
      backend:
        aliases:
          - "zookeeper"     
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
    - zookeeper
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      backend:
        aliases:
          - "kafka" 
  redis-cache:
    image: redis
    container_name: "redis-cache"
    ports:
      - 6379:6379 
    networks:
      backend:
        aliases:
          - "redis-cache"                    
  eurekaserver:
    image: ostock/eurekaserver:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started  
    networks:
      backend:
        aliases:
          - "eurekaserver"
  gatewayserver:
     image: ostock/gatewayserver:0.0.1-SNAPSHOT
     ports:
       - "8072:8072"
     environment:
       PROFILE: "default"
       SERVER_PORT: "8072"
       CONFIGSERVER_URI: "http://configserver:8071"
       EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
       EUREKASERVER_PORT: "8070"
       CONFIGSERVER_PORT: "8071"
       ZIPKIN_URI: "http://zipkinserver:9411"
     depends_on:
       database:
         condition: service_healthy
       configserver:
         condition: service_started
       eurekaserver:
         condition: service_started
     networks:
       backend:
         aliases:
           - "gateway"  
  licensingservice:
    image: ostock/licensing-service:0.0.3-SNAPSHOT
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY:       "IMSYMMETRIC"
      KAFKASERVER_URI: "kafka"
      ZKSERVER_URI: "kafka"
      KAFKASERVER_PORT: "9092"
      ZIPKIN_URI: "http://zipkinserver:9411"      
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      kafka:
        condition: service_started
    links:
      - database
      - kafka
    ports:
      - "8080:8080"
    networks:
      - backend
  organizationservice:
    image: ostock/organization-service:0.0.1-SNAPSHOT
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY:       "IMSYMMETRIC"
      KAFKASERVER_URI: "kafka"
      ZKSERVER_URI: "kafka"
      KAFKASERVER_PORT: "9092"
      ZIPKIN_URI: "http://zipkinserver:9411"      
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      kafka:
        condition: service_started
      redis-cache:
        condition: service_started  
    links:
      - database
      - kafka
      - redis-cache
    ports:
      - "8081:8081"
    networks:
      - backend
  authenticationservice:
     image: ostock/authentication-service:0.0.1-SNAPSHOT
     ports:
       - "8091:8091"
     environment:
       PROFILE: "default"
       SERVER_PORT: "8091"
       CONFIGSERVER_URI: "http://configserver:8071"
       EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
       EUREKASERVER_PORT: "8070"
       CONFIGSERVER_PORT: "8071"
     depends_on:
       database:
         condition: service_healthy
       configserver:
         condition: service_started
       eurekaserver:
         condition: service_started
     networks:
       backend:
         aliases:
           - "auth"
  logspout:
     image: gliderlabs/logspout
     command: syslog://logs6.papertrailapp.com:45997
     volumes: 
       - /var/run/docker.sock:/var/run/docker.sock
  zipkinmysql:
    image: openzipkin/zipkin-mysql
    container_name: zipkinmysql
    ports:
        - 3306:3306
    networks:
      - backend    
  zipkinserver:
    image: openzipkin/zipkin
    container_name: zipkinserver
    environment:
      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      - MYSQL_HOST=zipkinmysql
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    depends_on:
      - zipkinmysql
    networks:
      - backend
networks:
  backend:
    driver: bridge